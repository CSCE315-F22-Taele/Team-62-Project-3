<!DOCTYPE html>
<html>
	<head>
		<title>customer view</title>
		<style>
			#contentWrapper{
				width:100%;
			}

		.center-container {
			margin: auto;
			width: 100vmin;
			justify-content: center;
			text-align: center;

			<!-- border: 5px solid;
			padding: 50px 0; -->
		}


		button {
			border:none;
			background:#2c3473;
			color:white;
			border:2px solid #2c3473;
			margin:10px;
			padding:10px 5px;
			border-radius:5px;
			cursor:pointer;
		}

		button.selected {
			background:white;
			color:#2c3473;
		}

		button:focus {
			text-decoration:underline;
		}

		button.neutral{
			background:#444 ;
			border:none;
		}

		.main-grid-items {
			display: grid;
			grid-template-columns: repeat(2, 100px);
			grid-template-rows: repeat(6, 100px);
			margin-left: 40%;
			height:500px;
			grid-gap:0px;
		}

		.center {
			left: 80px;
		}

		.customer-start {
			display: block;
		}

		</style>

	</head>
	<body>
		<div class="center-container">
		<div id="google_translate_id"></div>

			<div style="display: block" id="start-screen">
				<h2>Welcome to Pom and Honey!</h2>

				<div class="customer-start">
					<button onclick="changeScreen('start-screen');changeScreen('order-screen')">
						Start Order
					</button>
					<button>Login</button>
                    <div id="googleMap" style="width:100%;height:400px;"></div>
				</div>
			</div>

			<div id="order-screen" style="display: none">
				<h2>What Looks Good Today?</h2>
				<table id="contentWrapper">
					<tr>
						<td>
							<div class="main-grid-items">
								<% for(let productDef of productDefs) { %>
									<button
										id="productDef_button_<%=productDef.id%>"
										onclick="loadNewProduct(<%=productDef.id%>);changeScreenProduct(<%=productDef.id%>)"
									>
										<%=productDef.name%>
										<img src='assets/assetproductdef/photo<%=productDef.id%>.jpeg'>
									</button>
								<% } %>
							</div>
						</td>
					</tr>
				</table>
				<div>
					<button onclick="changeScreen('order-screen');changeScreen('rice-screen')">
						Next ⮞
					</button>
				</div>
			</div>

			<div id="rice-screen" style="display: none">

				<% var color%>
				<% for (let cat of categories) { %>
					<% if (cat.id === 0) { %>
						<h2><%= cat.description %></h2>
						<% color = cat.color %>
					<% } %>
				<% } %>

				<table id="contentWrapper">
					<tr>
						<td>
							<div id="all-items" class="main-grid-items">
								<% for (let item of items) { %>
									<% if (item.categoryid === 0) { %>
											<button selectable=true id="item_button_<%=item.id%>" itemId=<%=item.id%>>
												<%= item.name %>
												<img src='assets/assetitem/photo<%=item.id%>.jpeg'>
											</button>
									<% } %>
								<% } %>
							</div>
						</td>
					</tr>
				</table>
				<div>
					<button onclick="changeScreen('order-screen');changeScreen('rice-screen')">
						⮜ previous
					</button>
					<button onclick="changeScreen('rice-screen');changeScreen('protein-screen')">
						Next ⮞
					</button>
				</div>
			</div>

			<div id="protein-screen" style="display: none">

				<% for (let cat of categories) { %>
					<% if (cat.id === 1) { %>
						<h2><%= cat.description %></h2>
						color = <%=cat.color %>
					<% } %>
				<% } %>

				<table id="contentWrapper">
					<tr>
						<td>
							<div id="all-items" class="main-grid-items">
								<% for (let item of items) { %>
									<% if (item.categoryid === 1) { %>
											<button selectable=true id="item_button_<%=item.id%>" itemId=<%=item.id%>>
												<%= item.name %>
												<img src='assets/assetitem/photo<%=item.id%>.jpeg'>
											</button>
									<% } %>
								<% } %>
							</div>
						</td>
					</tr>
				</table>
				<div>
					<button onclick="changeScreen('protein-screen');changeScreen('rice-screen')">
						⮜ previous
					</button>
					<button onclick="changeScreen('protein-screen');changeScreen('toppings-screen')">
						Next ⮞
					</button>
				</div>
			</div>

			<div id="toppings-screen" style="display: none">

				<% for (let cat of categories) { %>
					<% if (cat.id === 2) { %>
						<h2><%= cat.description %></h2>
						color = <%=cat.color %>
					<% } %>
				<% } %>

				<table id="contentWrapper">
					<tr>
						<td>
							<div id="all-items" class="main-grid-items">
								<% for (let item of items) { %>
									<% if (item.categoryid === 2) { %>
										<button selectable=true id="item_button_<%=item.id%>" itemId=<%=item.id%>>
											<%= item.name %>
											<img src='assets/assetitem/photo<%=item.id%>.jpeg'>
										</button>
									<% } %>
								<% } %>
							</div>
						</td>
					</tr>
				</table>
				<div>
					<button onclick="changeScreen('toppings-screen');changeScreen('protein-screen')">
						⮜ previous
					</button>
					<button onclick="changeScreen('toppings-screen');changeScreen('extras-screen')">
						Next ⮞
					</button>
				</div>
			</div>

			<div id="extras-screen" style="display: none">

				<% for (let cat of categories) { %>
					<% if (cat.id === 3) { %>
						<h2><%= cat.description %></h2>
						color = <%=cat.color %>
					<% } %>
				<% } %>


				<table id="contentWrapper">
					<tr>
						<td>
							<div id="all-items" class="main-grid-items">
								<% for (let item of items) { %>
									<% if (item.categoryid === 3) { %>
										<button selectable=true id="item_button_<%=item.id%>" itemId=<%=item.id%>>
											<%= item.name %>
											<img src='assets/assetitem/photo<%=item.id%>.jpeg'>
										</button>
									<% } %>
								<% } %>
							</div>
						</td>
					</tr>
				</table>
				<div>
					<button onclick="changeScreen('toppings-screen');changeScreen('extras-screen')">
						⮜ previous
					</button>
					<button onclick="changeScreen('extras-screen');changeScreen('checkout')">
						Next ⮞
					</button>
				</div>
			</div>

			<div id="checkout" style="display: none">
				<h3>Anything Else?</h3>
				<button onclick="changeScreen('order-screen');changeScreen('checkout')">Add Item</button>
			<div id="receipt"></div>
        <p>
            Subtotal: $<span id="subtotal">0.00</span><br>
            Total: $<span id="total">0.00</span><br>
        </p>
				<button onclick="finalizeOrder()">Checkout</button>
			</div>

		</div>
	<script src="/js/server.js"></script>
    <script src="https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
    <script>
        function myMap() {
            var location = new google.maps.LatLng(30.612448686913215, -96.34127527360305);
            var mapProp= {
                center:location,
                zoom:15,
            };

            var map = new google.maps.Map(document.getElementById("googleMap"),mapProp);

            new google.maps.Marker({
                position: location,
                map,
                title: "Pom and Honey",
              });
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCW9HNP9YkGooUrAov5-VImo6XmtbEQ4W8&callback=myMap"></script>
		<script>
			var discount = 0;
			var productDefs = <%-JSON.stringify(productDefs)%>;
			var items = <%-JSON.stringify(items)%>;

			let buttons = document.querySelectorAll("[selectable=true]");
			for(let button of buttons) {
				button.addEventListener("click", function() {
					button.classList.toggle("selected");
					itemId = button.getAttribute("itemId");
        		// If button represents an item, update product data to reflect this.
					if(itemId) {
						itemId = parseInt(itemId);
						let product = products[selectedProductId];
						if(product) {
							if(button.classList.contains("selected")) {
								product.selectedItems.add(itemId);
							}
							else {
								product.selectedItems.remove(itemId);
							}
						}
					}
				});
			}



			/**
			 * this thing adds the receipt area div, text, buttons, edits, and deletes
			 */
			function loadNewProduct(productDefId){
				productDef = getProductDef(productDefId);

				// edit button
				let editBtn = document.createElement("button");
        let thisProductId = currentProductId; // Copy the variable in a local context.
				editBtn.id = "product_button_" + thisProductId;
				editBtn.innerText = "Edit";
				newProduct = {
					productDef: productDefId,
					price: productDef.price,
					selectedItems: new Set()
				};
				products[thisProductId] = newProduct;
				editBtn.addEventListener("click", function(){
					loadExistingProduct(thisProductId);

					if (productDefId == 6) {
						changeScreen('checkout'); 
						changeScreen('extras-screen')
					} else if (productDefId == 5) {
						changeScreen('checkout'); 
						changeScreen('protein-screen')
					} else if (productDefId == 4) {

					} else if (productDefId == 3) {
						changeScreen('checkout'); 
						changeScreen('extras-screen')

					} else if (productDefId == 2) {
						changeScreen('checkout'); 
						changeScreen('rice-screen');
					} else if (productDefId == 1) {
						changeScreen('checkout'); 
						changeScreen('rice-screen');
					} else {
						changeScreen('checkout');
						changeScreen('rice-screen');
					}
				});

				// receipt div
				let receiptArea = document.createElement("div");
				receiptArea.id = "receipt" + thisProductId
				receiptArea.style.border = '3px solid';
				receiptArea.style.borderColor = 'purple';
				receiptArea.style.margin = '10px';
				receiptArea.style.borderRadius = '5px';

				// text for div
				let orderInfo = document.createElement("p")
				orderInfo.innerText = productDef.name + ": $" + productDef.price;

				// remove button
				let removeBtn = document.createElement("button");
				removeBtn.innerText = "Remove";
				removeBtn.id = "remove_product_button";
				removeBtn.addEventListener("click", function() {
					loadExistingProduct(thisProductId)
					removeSelectedProduct();
				})

				// 7 is the product id number for fountain drink
				// 4 is the product id number for falafels
				// both do not need a edit button
				if (productDefId === 7 || productDefId === 4) {
					document.querySelector("#receipt").appendChild(receiptArea);
					document.querySelector("#receipt"+thisProductId).appendChild(orderInfo);
					document.querySelector("#receipt"+thisProductId).appendChild(removeBtn);
				} else {
					document.querySelector("#receipt").appendChild(receiptArea);
					document.querySelector("#receipt"+thisProductId).appendChild(orderInfo);
					document.querySelector("#receipt"+thisProductId).appendChild(editBtn);
					document.querySelector("#receipt"+thisProductId).appendChild(removeBtn);
				}
				

				newProduct = {
					productDef: productDefId,
					price: productDef.price,
					selectedItems: new Set()
				};
				products[thisProductId] = newProduct;
				loadExistingProduct(thisProductId);
				updatePrice();
				currentProductId += 1;
			}

			function loadExistingProduct(id){
				selectedProductId = id;
				product = products[id];
				loadItemsForProductDef(product.productDef, product.selectedItems);
			}

		function loadItemsForProductDef(productDefId, selectedItems) {
			productDef = getProductDef(productDefId);
			let buttons = document.querySelectorAll("#all-items button");
			for (let button of buttons) {
				itemId = button.getAttribute("itemId");
				if (itemId) {
					itemId = parseInt(itemId);
					console.log("itemId: " + itemId)
					if (productDef.optionalitemlist.includes(itemId)) {
						button.style.display = "block";
						if (selectedItems.has(itemId)) {
							button.classList.add("selected");
						} else {
							button.classList.remove("selected");
						}
					} else {
						button.style.display = "none";
					}
				}
			}
		}


		function updatePrice() {
			let price = 0;
			for(let i in products) {
				price += products[i].price;
			}
			document.querySelector("#subtotal").innerText = price.toFixed(2);
        	document.querySelector("#total").innerText = (price * 1.0825 * (100-discount)/100).toFixed(2);
		}

		const totalPrice = () => {
			let price = 0;
			for(let i in products){
				price += products[i].price;
			}
        	return (price * 1.0825).toFixed(2);
		}

        function removeSelectedProduct(){
            console.log("Removing product " + selectedProductId);
            button = document.querySelector("#product_button_" + selectedProductId);
            console.log(button);

			delete products[selectedProductId];
			const parentID = event.target.parentElement.id
			const receiptDiv = document.getElementById(parentID);
			receiptDiv.remove()

            resetAllButtons();
            updatePrice();
        }

        function resetAllButtons(){
            let buttons = document.querySelectorAll("#all-items button");
            for(let button of buttons){
                button.style.display = "none";
                button.classList.remove("selected");
            }
            selectedProductId = -1;
        }

		var products = {}; // Used to store product data.
		var currentProductId = 0; // Used to track new products.
		var selectedProductId = -1; // Used to track the selected product.

		function finalizeOrder() {
            // Hints:
            // start with the products object
            const date = new Date();
			let day = date.getDate();
            let month = date.getMonth() + 1;
            let year = date.getFullYear();
            let dbDate = year+"-"+month+"-"+day
            let orderDate = month+"/"+day+"/"+year

            let productList = []


            // putting values into a list
            console.log("here" + products);
            let values = Object.values(products)
            for (value in values) {
				let newProduct = {"id": values[value].productDef, "selectedItems": Array.from(values[value].selectedItems)}
                productList.push(newProduct)
            }

			// the object that will pass into addOrderToDatabase
            finalOrder = {
                "discount": 0,
				"productList": productList,
			}

			console.log(finalOrder)

            // work with backend (Ezra) to figure out what he wants the object to look like.

            // use server.POST (import /js/server.js)
            server.POST("/customerOrder", finalOrder, (response) => {
                window.location.reload();
            }, (error) => {
				alert(error);
            })

        }

		function googleTranslateElementInit() {
			new google.translate.TranslateElement(
				{pageLanguage: 'en'}, 'google_translate_id'
			)
		}

		function changeScreen(id) {
			var x = document.getElementById(id);
			if (x.style.display === "none") {
				return x.style.display = "block";
			}
			return x.style.display = "none";
		}

		/*
		 * change screen based on the product the customer picked
		 */
		function changeScreenProduct(id) {
			if (id === 7) { 
				changeScreen('order-screen')
				changeScreen('checkout')
			} else if (id == 6) {
				changeScreen('order-screen')
				changeScreen('extras-screen')
			} else if (id == 5) {
				changeScreen('order-screen')
				changeScreen('protein-screen')
			} else if (id == 4) {
				changeScreen('order-screen')
				changeScreen('checkout')
			} else if (id == 3) {
				changeScreen('order-screen')
				changeScreen('extras-screen')
			} else if (id == 2) {
				changeScreen('order-screen')
				changeScreen('rice-screen')
			} else if (id == 1) {
				changeScreen('order-screen')
				changeScreen('rice-screen')
			} else {
				changeScreen('order-screen')
				changeScreen('checkout')
			}
		}

		const getProductDef = (id) => {
			let productDef;
			for(let def of productDefs){
				if(def.id == id){
					productDef = def;
					break;
				}
			}
			return productDef;
		}

		</script>

	</body>
</html>
