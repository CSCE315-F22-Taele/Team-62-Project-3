<!DOCTYPE html>
<html>
	<head>
		<title>customer view</title>
		<style>
			#contentWrapper{
				width:100%;
			}
		
		.center-container {
			margin: auto;
			width: 100vmin;
			justify-content: center;
			text-align: center;
			
			border: 5px solid;
			padding: 50px 0;
		}


		button {
			border:none;
			background:#2c3473;
			color:white;
			border:2px solid #2c3473;
			margin:10px;
			padding:10px 5px;
			border-radius:5px;
			cursor:pointer;
		}

		button.selected {
			background:white;
			color:#2c3473;
		}

		button:focus {
			text-decoration:underline;
		}

		button.neutral{
			background:#444 ;
			border:none;
		}
		
		.main-grid-items {
			display: grid;
			grid-template-columns: repeat(2, 100px);
      grid-template-rows: repeat(6, 100px);
      margin:0px 50px;
      height:500px;
      grid-gap:0px;
		}

		.order-section {
			display: none;
		}

		</style>

	</head>
	<body>
		<div class="center-container">
      <div id="google_translate_id"></div>

			<div style="display: block" id="start-screen">
				<h2>Welcome to Pom and Honey!</h2>
				<button onclick="showOrderMenu();customerStartScreen()">Start Order</button>
				<button>Login</button>
			</div>
			
			<div id="order-screen" style="display: none">
				<h2>What Looks Good Today?</h2>
				<table id="contentWrapper">
					<tr>

						<td>
							<div class="btn-vertical main-grid-items">
								<% for(let productDef of productDefs) { %>
								<button 
									onclick="hideProduct();" 
									id="productDef_button_<%=productDef.id%>"
								>
									<%=productDef.name%>
								</button>
								<% } %>
							</div>
						</td>
						
					</tr>
				</table>
				<div>
					<button>⮜ previous</button>
					<button>Next ⮞</button>
				</div>
			</div>

			
		</div>

    <script src="https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
		<script>



			var productDefs = <%-JSON.stringify(productDefs)%>;

			let buttons = document.querySelectorAll("[selectable=true]");
			for(let button of buttons) {
				button.addEventListener("click", function() {
					button.classList.toggle("selected");
					itemId = button.getAttribute("itemId");
        		// If button represents an item, update product data to reflect this.
					if(itemId) {
						itemId = parseInt(itemId);
						let product = products[selectedProductId];
						if(product) {
							if(button.classList.contains("selected")) {
								product.selectedItems.add(itemId);
							}
							else {
								product.selectedItems.remove(itemId);
							}
						}
					}
				});
			}

			var products = {}; // Used to store product data.
			var currentProductId = 0; // Used to track new products.
			var selectedProductId = -1; // Used to track the selected product.

			const hideProduct = () => {
				for (let prodcut in products) {
					console.log(product)
				}
			}

			function googleTranslateElementInit() {
				new google.translate.TranslateElement(
					{pageLanguage: 'en'}, 'google_translate_id'
				)
			}

			function showOrderMenu() {
				var x = document.getElementById("order-screen");
				if (x.style.display === "none") {
					return x.style.display = "block";
				}
				return x.style.display = "none";
			}

			const customerStartScreen = () => {
				var x = document.getElementById("start-screen");
				if (x.style.display === "none") {
					return x.style.display = "block";
				}
				return x.style.display = "none";
			}
		</script>

	</body> 
</html>